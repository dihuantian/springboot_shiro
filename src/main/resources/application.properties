#### Configuration Tomcat(SSL) Start ####
#Server Http Port#
server.port=8080
#Enable SSL support#
server.ssl.enabled=true
#SSL protocol to use#
server.ssl.protocol=TLS
#Path to the key store that holds the SSL certificate (typically a jks file)#
server.ssl.key-store=classpath:keystore.jks
#Password used to access the key store#
server.ssl.key-password=iloveyou0315
#Password used to access the key in the key store#
server.ssl.key-store-password=iloveyou0315
#Type of the key store#
server.ssl.key-store-type=jks
#Alias that identifies the key in the key store#
server.ssl.keyAlias=hehe.keystore
#Enable access log#
server.tomcat.accesslog.enabled=true
#Format pattern for access logs#
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
#### Configuration Tomcat(SSL) End ####

##### Configuration HttpSession Start ####
spring.session.store-type=redis
spring.session.redis.flush-mode=immediate
##### Configuration HttpSession End ####

#### Configuration Redis Start ####
#Redis server host#
spring.redis.host=localhost
#Redis server port#
spring.redis.port=6379
#Login password of the redis server#
spring.redis.password=
#Database index used by the connection factory#
spring.redis.database=0
#Connection timeout in milliseconds#
spring.redis.timeout=2000
#Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit#
spring.redis.pool.max-active=8
#Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections#
spring.redis.pool.max-idle=8
#Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely#
spring.redis.pool.max-wait=-1
#Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive#
spring.redis.pool.min-idle=0
#### Configuration Redis End ####

##### Configuration Thymeleaf Start ####
#Thymeleaf Coding#
spring.thymeleaf.encoding=UTF-8
#Thymeleaf Cache Enable#
spring.thymeleaf.cache=true
#Thtmeleaf Model#
spring.thymeleaf.mode=HTML5
#Enable MVC Thymeleaf View Resolution#
spring.thymeleaf.enabled=true
#Prefix that gets prepended to view names when building a URL#
spring.thymeleaf.prefix=classpath:/templates/
#Suffix that gets appended to view names when building a URL#
spring.thymeleaf.suffix=.html
#Thymeleaf Template Content Type#
spring.thymeleaf.content-type=text/html
#Examination Thymeleaf Template Exist#
spring.thymeleaf.check-template=true
#Examination Thymeleaf Template Location Exist#
spring.thymeleaf.check-template-location=true
##### Configuration Thymeleaf End ####

#### Configuration SpringMVC Start ####
#Enable resolution of favicon.ico#
spring.mvc.favicon.enabled=true
#### Configuration SpringMVC End ####

#### Configuration DataSource Start ####
# Login user of the database#
spring.datasource.username=root
#Login password of the database#
spring.datasource.password=iloveyou0315
#JDBC url of the database#
spring.datasource.url=jdbc:mysql:///online_rating?useUnicode=true&characterEncoding=utf8&useSSL=false&nullNamePatternMatchesAll=true&serverTimezone=UTC
#Fully qualified name of the JDBC driver. Auto-detected based on the URL by default#
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#### Configuration DataSource Start ####

#### Configuration MyBatis Start ####
mybatis.check-config-location=true
mybatis.config-location=classpath:mybatis/configuration/mybatis-config.xml
mybatis.mapper-locations=classpath*:mybatis/mapper/*Dao.xml
mybatis.type-aliases-package=com.example.springboot_shiro.domain
#### Configuration MyBatis Start ####

#### Configuration Logger Start ####
logging.level.root=INFO
debug=false
#### Configuration Logger Start ####